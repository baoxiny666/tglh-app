{"remainingRequest":"E:\\VueProject\\tglh-app\\node_modules\\thread-loader\\dist\\cjs.js!E:\\VueProject\\tglh-app\\node_modules\\babel-loader\\lib\\index.js!E:\\VueProject\\tglh-app\\src\\utils\\aes.js","dependencies":[{"path":"E:\\VueProject\\tglh-app\\src\\utils\\aes.js","mtime":1609918239568},{"path":"E:\\VueProject\\tglh-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500371},{"path":"E:\\VueProject\\tglh-app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500371},{"path":"E:\\VueProject\\tglh-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532801399}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgQ3J5cHRvSlMgZnJvbSAnY3J5cHRvLWpzJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlL2luZGV4LmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIC8v5Yqg5a+GCiAgZW5jcnlwdDogZnVuY3Rpb24gZW5jcnlwdChkYXRhKSB7CiAgICB2YXIga2V5ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2Uoc3RvcmUuc3RhdGUuY29uZmlnLmVuY3J5cHRLZXkpOwogICAgdmFyIGl2ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2Uoc3RvcmUuc3RhdGUuY29uZmlnLmVuY3J5cHRJdik7CiAgICB2YXIgZW5jcnlwdGVkID0gQ3J5cHRvSlMuQUVTLmVuY3J5cHQoSlNPTi5zdHJpbmdpZnkoZGF0YSksIGtleSwgewogICAgICBpdjogaXYsCiAgICAgIG1vZGU6IENyeXB0b0pTLm1vZGUuQ0JDLAogICAgICBwYWRkaW5nOiBDcnlwdG9KUy5wYWQuUGtjczcKICAgIH0pLnRvU3RyaW5nKCk7CiAgICByZXR1cm4gZW5jcnlwdGVkOwogIH0sCiAgLy/op6Plr4YKICBkZWNyeXB0OiBmdW5jdGlvbiBkZWNyeXB0KGRhdGEpIHsKICAgIHZhciBrZXkgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShzdG9yZS5zdGF0ZS5jb25maWcuZW5jcnlwdEtleSk7CiAgICB2YXIgaXYgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShzdG9yZS5zdGF0ZS5jb25maWcuZW5jcnlwdEl2KTsKICAgIHZhciBkZWNyeXB0ZWQgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdChkYXRhLCBrZXksIHsKICAgICAgaXY6IGl2LAogICAgICBtb2RlOiBDcnlwdG9KUy5tb2RlLkNCQywKICAgICAgcGFkZGluZzogQ3J5cHRvSlMucGFkLlBrY3M3CiAgICB9KS50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCk7CiAgICByZXR1cm4gZGVjcnlwdGVkOwogIH0KfTs="},{"version":3,"sources":["E:/VueProject/tglh-app/src/utils/aes.js"],"names":["CryptoJS","store","encrypt","data","key","enc","Utf8","parse","state","config","encryptKey","iv","encryptIv","encrypted","AES","JSON","stringify","mode","CBC","padding","pad","Pkcs7","toString","decrypt","decrypted"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,eAAe;AAGX;AACAC,EAAAA,OAJW,mBAIHC,IAJG,EAIG;AACV,QAAIC,GAAG,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,UAA3C,CAAV;AACA,QAAIC,EAAE,GAAEX,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBG,SAA3C,CAAR;AACA,QAAIC,SAAS,GAAGb,QAAQ,CAACc,GAAT,CAAaZ,OAAb,CACZa,IAAI,CAACC,SAAL,CAAeb,IAAf,CADY,EAEZC,GAFY,EAGZ;AAAEO,MAAAA,EAAE,EAAEA,EAAN;AAAUM,MAAAA,IAAI,EAAEjB,QAAQ,CAACiB,IAAT,CAAcC,GAA9B;AAAmCC,MAAAA,OAAO,EAAEnB,QAAQ,CAACoB,GAAT,CAAaC;AAAzD,KAHY,EAIdC,QAJc,EAAhB;AAKA,WAAOT,SAAP;AACH,GAbU;AAcX;AACAU,EAAAA,OAfW,mBAeHpB,IAfG,EAeG;AACV,QAAIC,GAAG,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,UAA3C,CAAV;AACA,QAAIC,EAAE,GAAEX,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBG,SAA3C,CAAR;AACA,QAAIY,SAAS,GAAGxB,QAAQ,CAACc,GAAT,CAAaS,OAAb,CACZpB,IADY,EAEZC,GAFY,EAGZ;AAAEO,MAAAA,EAAE,EAAEA,EAAN;AAAUM,MAAAA,IAAI,EAAEjB,QAAQ,CAACiB,IAAT,CAAcC,GAA9B;AAAmCC,MAAAA,OAAO,EAAEnB,QAAQ,CAACoB,GAAT,CAAaC;AAAzD,KAHY,EAIdC,QAJc,CAILtB,QAAQ,CAACK,GAAT,CAAaC,IAJR,CAAhB;AAKA,WAAOkB,SAAP;AACH;AAxBU,CAAf","sourcesContent":["import CryptoJS from 'crypto-js';\r\nimport store from '../store/index.js'\r\nexport default {\r\n\r\n\r\n    //加密\r\n    encrypt(data) {\r\n        let key = CryptoJS.enc.Utf8.parse(store.state.config.encryptKey)\r\n        let iv= CryptoJS.enc.Utf8.parse(store.state.config.encryptIv)\r\n        let encrypted = CryptoJS.AES.encrypt(\r\n            JSON.stringify(data),\r\n            key,\r\n            { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7},\r\n        ).toString()\r\n        return encrypted\r\n    },\r\n    //解密\r\n    decrypt(data) {\r\n        let key = CryptoJS.enc.Utf8.parse(store.state.config.encryptKey)\r\n        let iv= CryptoJS.enc.Utf8.parse(store.state.config.encryptIv)\r\n        let decrypted = CryptoJS.AES.decrypt(\r\n            data,\r\n            key,\r\n            { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7},\r\n        ).toString(CryptoJS.enc.Utf8)\r\n        return decrypted\r\n    }\r\n \r\n}"]}]}